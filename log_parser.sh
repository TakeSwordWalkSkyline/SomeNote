#!/bin/bash

log_file=""
jn_file=/tmp/jn_$(date -u +"%Y-%m-%dT%H:%M:%SZ").txt
jn_check_file=/tmp/jn_check_$(date -u +"%Y-%m-%dT%H:%M:%SZ").txt
jw_file=/tmp/jw_$(date -u +"%Y-%m-%dT%H:%M:%SZ").txt
jw_check_file=/tmp/jw_check_$(date -u +"%Y-%m-%dT%H:%M:%SZ").txt
case_list_file=""

if [ $# -ne 2 ]; then
    echo "Parse log generated by test_term_wakeup and generate ROC table."
    echo
    echo "Usage: ${0} <log_file> <case_list>"
    exit 1
elif [ ! -f ${1} ]; then
    echo "No such file or directory: ${1}"
    exit 1
elif [ ! -f ${2} ]; then
    echo "No such file or directory: ${2}"
    exit 1
else
    log_file="${1}"
    case_list_file="${2}"
fi

# split log to jn.lot and jw.log
linenum=$(grep -n "open logfile" ${log_file} | tail -n 1 | awk -F ':' '{print $1}')
split_line=$[linenum - 1]
head -n ${split_line} ${log_file} > "${jn_file}"
tail -n +${split_line} ${log_file} > "${jw_file}"

#jn
echo 'refine log of positive part...'
grep -e 'open log' \
     -e 'api work term \[[0-9]\+\]' \
     -e 'activate wakeup term: type [0-9]\+, scene [0-9]\+, min' \
     -e 'filename:/' \
     -e 'flush ID' \
     "${jn_file}" > "${jn_check_file}"

sed -i 's/.*WAKEUP//g' "${jn_check_file}"
sed -i 's/.*open log.*/[log]/g' "${jn_check_file}"
sed -i 's/.*api work term \[\([0-9]\+\)\].*/\[append\] \1/g' "${jn_check_file}"
sed -i 's/.*activate wakeup term: type \([0-9]\+\), scene \([0-9]\+\), min \(-\?[0-9]\+\), max \(-\?[0-9]\+\)/\[activate\] \1 \2 \3 \4/g' "${jn_check_file}"
sed -i 's/.*filename:.*/\[filename\]/g' "${jn_check_file}"
sed -i 's/.*flush ID:\([0-9]\+\) start:\([0-9]\+\) end:\([0-9]\+\) t:\([0-9]\+\) cm:\(.*\) log-cm.*/\[check\] \1 \2 \5/g' "${jn_check_file}"
sed -i 's/\[start\].*\[\(.*\)\]/\[reset\] \1/g' "${jn_check_file}"
sed -i 's/\[reset\].*\[\(.*\)\]/\[reset\] \1/g' "${jn_check_file}"

#jw
echo 'refine log of negative part...'
grep -e 'open log' \
     -e 'api work term \[[0-9]\+\]' \
     -e 'activate wakeup term: type [0-9]\+, scene [0-9]\+, min' \
     -e 'filename:/' \
     -e 'flush ID' \
     -e 'reset wakeup in term' \
     -e 'start wakeup in term' \
     "${jw_file}" > "${jw_check_file}"

sed -i 's/.*WAKEUP//g' "${jw_check_file}"
sed -i 's/.*open log.*/[log]/g' "${jw_check_file}"
sed -i 's/.*api work term \[\([0-9]\+\)\].*/\[append\] \1/g' "${jw_check_file}"
sed -i 's/.*activate wakeup term: type \([0-9]\+\), scene \([0-9]\+\), min \(-\?[0-9]\+\), max \(-\?[0-9]\+\)/\[activate\] \1 \2 \3 \4/g' "${jw_check_file}"
sed -i 's/.*filename:.*/\[filename\]/g' "${jw_check_file}"
sed -i 's/.*flush ID:\([0-9]\+\) start:\([0-9]\+\) end:\([0-9]\+\) t:\([0-9]\+\) cm:\(.*\) log-cm.*/\[check\] \1 \2 \5/g' "${jw_check_file}"
sed -i 's/\[reset\].*\[\(.*\)\]/\[reset\] \1/g' "${jw_check_file}"
sed -i 's/\[start\].*\[\(.*\)\]/\[start\] \1/g' "${jw_check_file}"

echo 'parse log...'
python log_parser.py "${jn_check_file}" "${jw_check_file}" "${case_list_file}"
echo 'cleaning... Done!'
rm "${jn_file}" "${jw_file}" "${jn_check_file}" "${jw_check_file}"
